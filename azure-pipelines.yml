trigger:
- main

name: Azure Pipelines
variables:
  python.version: '3.8.8'
stages:
- stage: Provisioning
  displayName: 'Provisioning'
  jobs:
  - job: provisioning
    displayName: 'Inrrastracture Provisioning with Terraform'
    steps:
      - task: InstallSSHKey@0
        displayName: 'Install ssh-keys'
        inputs:
          knownHostsEntry: 'default'
          sshPublicKey: $(PUBLIC_KEY)'
          sshKeySecureFile: 'id_rsa'
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: 'Terraform Install'
        inputs:
          terraformVersion: '0.12.3'
      - task: TerraformTaskV2@2
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: '$(AZURE_SUBSCRIPTION_ID)'
          backendAzureRmResourceGroupName: 'udacity-project3-rg'
          backendAzureRmStorageAccountName: 'tfstate16018'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'terraform.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        
      - task: TerraformTaskV2@2
        displayName: Terraform Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          environmentServiceNameAzureRM: '$(AZURE_SUBSCRIPTION_ID)'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
      - task: TerraformTaskV2@2
        displayName: Terraform Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          environmentServiceNameAzureRM: '$(AZURE_SUBSCRIPTION_ID)'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
